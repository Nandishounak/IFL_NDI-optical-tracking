import numpy as np
from math import  pi, atan2
# rot_mat_47 = np.array([[-0.006143280813090928, 0.9999811298723852, 0.0, 214.5994433372316],
#                        [-0.9798091117282525, -0.006019356102589655, -0.19984461945822493, 22.713728457396925],
#                        [-0.19984084836475263, -0.001227701616317171, 0.9798276012001281, -769.428757322964],
#                        [0, 0, 0, 1]])
# rot_mat_58 = np.array([[-0.005175117994507829, 0.9999866089872119, 0.0, 244.6126272367041],
#                        [-0.9798934201060608, -0.005071131978683872, -0.19945718551433997, 16.346743157563722],
#                        [-0.19945451458061808, -0.0010322144698891472, 0.9799065420470965, -739.564238097106],
#                        [0, 0, 0, 1]])
# rot_mat_4578= np.array([[-0.005695864200635252, -0.018259953355890403, -0.999817048881668, 280.9273235803949],
#                         [-0.9798510826177376, -0.1995162596044971, 0.009225944194364021, 27.1071964849213],
#                         [-0.19964822319233017, 0.9797243674916285, -0.01675561754379268, -793.1540900852019],
#                         [0, 0, 0, 1]])
# rot_mat_8pts = np.array([[0.0799511025329124, -0.2961508536777904, -0.9517891011509259, 293.1089168805539],
#                          [-0.9818297428055095, -0.1882529670089677, -0.02389930029910778, 26.63121226611543],
#                          [-0.1720993240725773, 0.9364056237967796, -0.3058207487655566, -791.2228510260477],
#                          [0, 0, 0, 1]])

#####
# 02/06/2022
#
rot_mat_8pts = np.array([[0.008657308074266226, 0.02197853265452532, -0.9997209586275868, 242.6493726978072],
                         [-0.9991168473809777, -0.04091810489742242, -0.009551647559459767, 75.92916428306441],
                         [-0.041116618251065724, 0.9989207440002226, 0.02160488161593689, -869.6666802060703],
                         [0, 0, 0, 1]])

# rot_mat_48= np.array([[-0.26777379128386, -0.28220414219734513, 0.9212263667677604, 291.638789087869],
#                       [-0.9506898916522714, 0.23267761364128597, -0.20506062035502892, 7.84879608433706],
#                       [-0.1564797961772082, -0.930710454565144, -0.33059359212102457, -707.024954851926],
#                       [0, 0, 0, 1]])

X_stl1 = np.array ([[145.46],[-5.02], [15.52],[1]])
X_stl2 = np.array ([[145.46 ],[-5.02], [-39.51],[1]])
X_stl4 = np.array ([[145.06],[45.00], [20.50],[1]])
X_stl5 = np.array ([[145.06],[45.00], [-9.50],[1]])
X_stl7 = np.array ([[-72.92],[45.00], [20.50],[1]])
X_stl8 = np.array ([[-72.92],[45.00], [-9.50],[1]])
X_stl10 = np.array ([[-72.92],[-5.00], [20.50],[1]])
X_stl11 = np.array ([[-72.92],[-5.00], [-39.50],[1]])




l1 = np.array( [[2.283305901240494791e+02], [-7.080306759774894942e+01], [-8.806196407991690194e+02],[1]])
l2 = np.array( [[2.831818939127198860e+02], [-6.993650185176551304e+01], [-8.815298148316080642e+02],[1]])
l4 = np.array( [[2.243921130249609064e+02], [-7.253133455452615408e+01], [-8.299620785548941058e+02],[1]])
l5= np.array( [[2.545230288132366923e+02],[-7.222537382531328376e+01], [-8.310874566169278523e+02],[1]])
l7= np.array( [[2.226821118882031101e+02], [1.484910045292430709e+02], [-8.217847191641635618e+02],[1]])
l8= np.array( [[2.525281437302766676e+02], [1.482658125733707948e+02], [-8.209572858670321693e+02],[1]])
l10= np.array( [[2.211685271880431856e+02], [1.500388542527310278e+02], [-8.713506691644838611e+02],[1]])
l11= np.array( [[2.813934805703478901e+02], [1.506846988032460217e+02], [-8.726054055622555552e+02],[1]])


# diff = np.sqrt((l4[0] - l7[0])**2+(l4[1] - l7[1])**2+(l4[2] - l7[2])**2+(l4[3] - l7[3])**2)
# print('diff_computed', diff)
#
# diff_true = np.sqrt((X_stl4[0] - X_stl7[0])**2+(X_stl4[1] - X_stl7[1])**2+(X_stl4[2] - X_stl7[2])**2+(X_stl4[3] - X_stl7[3])**2)
# print('diff_true',diff_true )
# diff = np.sqrt((l5[0] - l8[0])**2+(l5[1] - l8[1])**2+(l5[2] - l8[2])**2+(l5[3] - l8[3])**2)
# print('diff_computed', diff)
#
# diff_true = np.sqrt((X_stl5[0] - X_stl8[0])**2+(X_stl5[1] - X_stl8[1])**2+(X_stl5[2] - X_stl8[2])**2+(X_stl5[3] - X_stl8[3])**2)
# print('diff_true',diff_true )
stl2 = np.linalg.pinv(rot_mat_8pts)@l2
print ('stl2', stl2)
stl4 = np.linalg.pinv(rot_mat_8pts)@l4
print ('stl4', stl4)
stl5 = np.linalg.pinv(rot_mat_8pts)@l5
print ('stl5', stl5)
stl7 = np.linalg.pinv(rot_mat_8pts)@l7
print ('stl7', stl7)
stl8 = np.linalg.pinv(rot_mat_8pts)@l8
print ('stl8', stl8)

diff47 = np.sqrt((l4[0] - l7[0])**2+(l4[1] - l7[1])**2+(l4[2] - l7[2])**2+(l4[3] - l7[3])**2)
print('diff_computed4_7', diff47)

diff_true47 = np.sqrt((X_stl4[0] - X_stl7[0])**2+(X_stl4[1] - X_stl7[1])**2+(X_stl4[2] - X_stl7[2])**2+(X_stl4[3] - X_stl7[3])**2)
print('diff_true4_7',diff_true47 )

diff1_11 = np.sqrt((l1[0] - l11[0])**2+(l1[1] - l11[1])**2+(l1[2] - l11[2])**2+(l1[3] - l11[3])**2)
print('diff_computed1_11', diff1_11)

diff_true1_11 = np.sqrt((X_stl1[0] - X_stl11[0])**2+(X_stl1[1] - X_stl11[1])**2+(X_stl1[2] - X_stl11[2])**2+(X_stl1[3] - X_stl11[3])**2)
print('diff_true1_11',diff_true1_11 )


rotation_matrix_8pts = np.array([[0.008657308074266226, 0.02197853265452532, -0.9997209586275868],
                         [-0.9991168473809777, -0.04091810489742242, -0.009551647559459767],
                         [-0.041116618251065724, 0.9989207440002226, 0.02160488161593689]])
#find rotation angles
R31 = rotation_matrix_8pts[2,0]
R32 = rotation_matrix_8pts[2,1]
R33 = rotation_matrix_8pts[2,2]
R21 = rotation_matrix_8pts[1,0]
R11 = rotation_matrix_8pts[0,0]
R12 = rotation_matrix_8pts[0,1]
R13 = rotation_matrix_8pts[0,2]

# theta_x = atan2(r32,r33), theta_y= atan2(-r31, sqrt(r32^2 + r33^2)), theta_z = atan2(r21, r11)

theta_x = atan2(R32, R33)
theta_y = atan2(-R31, np.sqrt((R32)**2 + (R33)**2))
theta_z = atan2(R21,R11)

# print('Imfusion matrix', rotation_matrix_4pts)
print('theta_x, theta_y, theta_z=', theta_x*180/pi, theta_y*180/pi, theta_z*180/pi)
#error
# mse2 = np.sum((stl2[1:] - X_stl2[1:])**2)
# mse4 = np.sum((stl4[1:] - X_stl4[1:])**2)
# mse7 = np.sum((stl7[1:] - X_stl7[1:])**2)
#
# print('mse4', mse4, '\n', 'mse7', mse7)
# mse5 = np.sum((stl5[1:] - X_stl5[1:])**2)
# mse8 = np.sum((stl8[1:] - X_stl8[1:])**2)
#
# print('mse5', mse5, '\n', 'mse8', mse8)

